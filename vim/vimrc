set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab
set showcmd
set showmode
set showmatch
set hlsearch
set incsearch
set ignorecase
set smartcase
set autoindent
set textwidth=119
set formatoptions=c
set ruler
set number relativenumber
set mouse=a

" global undo
set undofile
set undodir=/tmp/$USER.vim/undo
autocmd VimEnter * silent !mkdir -p /tmp/$USER.vim/undo

filetype plugin indent on
syntax on
set t_Co=256
" set cursorline
set autochdir
set noerrorbells
" set visualbell
set hidden
set winheight=999
command! Bd bp|bd #

" vim-plug

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'rust-lang/rust.vim'
Plug 'majutsushi/tagbar'
Plug 'ajh17/VimCompletesMe'
Plug 'vim-airline/vim-airline'
Plug 'morhetz/gruvbox'
Plug 'jiangmiao/auto-pairs'
Plug 'vim-syntastic/syntastic'
Plug 'fatih/vim-go'
call plug#end()

" gruvbox theme
let g:gruvbox_italic=1
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox
set background=dark
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
hi Normal guibg=NONE ctermbg=NONE

map <F2> :10Lexplore<CR>
map <F3> :TagbarToggle<CR>
set pastetoggle=<F4>

map <F5> :%bd\|e#\|bd#<CR>

autocmd FileType * setlocal colorcolumn=80,120

" Convenient buffer mgmt
set wildchar=<Tab> wildmenu wildmode=full
set wildcharm=<C-Z>
nnoremap gb :ls<CR>:b<Space>

" No arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Move by displayed lines
nnoremap j gj
nnoremap k gk
nnoremap J 10gj
nnoremap K 10gk

" Unset highlight after search
nnoremap <silent> <CR> :noh<CR><CR>

" Unlock delete
:set backspace=indent,eol,start

" Ctags
set tags=tags;/

" Buffer line
nnoremap <silent> <C-N> :bnext<CR>
nnoremap <silent> <C-P> :bprev<CR>
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline_symbols_ascii = 1

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_c_compiler = "gcc"
let g:syntastic_c_compiler_options = "-std=gnu11"
let g:syntastic_cpp_compiler = "g++"
let g:syntastic_c_config_file = ".syntastic_c_config"
let g:syntastic_cpp_config_file = ".syntastic_cpp_config"
let g:syntastic_go_checkers = ['go']

" Hiding syntastic buffer
autocmd FileType qf set nobuflisted

" Folding
set foldmethod=marker

" C types
syn keyword cType s8 s16 s32 s64 s128
syn keyword cType u8 u16 u32 u64 u128

" Spaces at EOL
match Search '\s\+$'

" Netrw
let g:netrw_liststyle = 3
let g:netrw_banner = 0
let g:netrw_keepdir = 0
autocmd WinEnter * if winnr('$') == 1 &&
    \ getbufvar(winbufnr(1), "&filetype") == "netrw" | qa | endif

" Garbage collection (not really)
autocmd VimEnter * redraw!
