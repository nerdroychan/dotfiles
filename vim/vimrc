set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab
set showcmd
set showmode
set showmatch
set hlsearch
set incsearch
set ignorecase
set smartcase
set autoindent
set textwidth=119
set formatoptions=c
set ruler
set number relativenumber
set mouse=a

" global undo
set undofile
set undodir=/tmp/.vim/undo/
autocmd VimEnter * silent !mkdir -p /tmp/.vim/undo

filetype plugin indent on
syntax on
set t_Co=256
" set cursorline
set autochdir
set noerrorbells
" set visualbell
set hidden
set winheight=999
command! Bd bp|bd #

" vim-plug

if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'rust-lang/rust.vim'
Plug 'majutsushi/tagbar'
Plug 'ajh17/VimCompletesMe'
Plug 'vim-airline/vim-airline'
Plug 'morhetz/gruvbox'
Plug 'jiangmiao/auto-pairs'
" Plug 'ap/vim-buftabline'
call plug#end()

" gruvbox theme
let g:gruvbox_italic=1
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox
set background=dark
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif
hi Normal guibg=NONE ctermbg=NONE

map <F2> :NERDTreeToggle<CR>
map <F3> :TagbarToggle<CR>
set pastetoggle=<F4>

" higlight column right after max textwidth
set colorcolumn=+1

" Disable vertical line at max string length in NERDTree
autocmd FileType * setlocal colorcolumn=+1
autocmd FileType nerdtree setlocal colorcolumn=''

" Convenient buffer mgmt
set wildchar=<Tab> wildmenu wildmode=full
set wildcharm=<C-Z>
nnoremap gb :ls<CR>:b<Space>

" No arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Arrow keys can switch buffers
nnoremap <up> :bp<CR>
nnoremap <left> :bp<CR>
nnoremap <down> :bn<CR>
nnoremap <right> :bn<CR>

" Move by displayed lines
nnoremap j gj
nnoremap k gk

" Buf switch made easy
nnoremap ` :b <C-Z>

" Unset highlight after search
nnoremap <CR> :noh<CR><CR>

" Unlock delete
:set backspace=indent,eol,start

" Ctags
set tags=tags;/

" Buffer line
nnoremap <C-N> :bnext<CR>
nnoremap <C-P> :bprev<CR>
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

" Quick save
" nmap <c-s> :w<CR>
" vmap <c-s> <Esc><c-s>gv
" imap <c-s> <Esc><c-s>

" Folding
set foldmethod=marker

" C types
syn keyword cType s8 s16 s32 s64 s128
syn keyword cType u8 u16 u32 u64 u128

" Spaces at EOL
match Search '\s\+$'
